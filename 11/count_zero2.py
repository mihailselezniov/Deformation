# -*- coding: utf-8 -*-
import numpy as np

par = {}
parts = 10
par['pressure_time'] = {'Min': 0.0, 'Max': 100.0}
par['pressure_radius'] = {'Min': 0.0, 'Max': 5.0}
par['pressure_amplitude'] = {'Min': 0.0, 'Max': 200.0}
par['length'] = {'Min': 10.0, 'Max': 100.0}
par['diameter'] = {'Min': 0.01, 'Max': 0.5}
par['young'] = {'Min': 60.0, 'Max': 300.0}
par['density'] = {'Min': 1000.0, 'Max': 2000.0}
par['strength'] = {'Min': 0.2, 'Max': 10.0}

def get_list(Min, Max):
    return list(map(lambda x: round(x, 2), np.arange(Min, Max+0.01, (Max-Min)/(parts-1))))

with open('data45k.txt', 'r') as f:
    data_is_broken = f.readlines()
data_is_broken = list(map(int, data_is_broken))

X, Y, Z = [], [], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

for i, val in enumerate(data_is_broken):
    Y.extend([i%2]*val)

i = 0
for i0, l in enumerate(get_list(**par['length'])):
    for i1, di in enumerate(get_list(**par['diameter'])):
        for i2, y in enumerate(get_list(**par['young'])):
            for i3, de in enumerate(get_list(**par['density'])):
                for i4, pt in enumerate(get_list(**par['pressure_time'])):
                    for i5, pr in enumerate(get_list(**par['pressure_radius'])):
                        for i6, pa in enumerate(get_list(**par['pressure_amplitude'])):
                            for i7, s in enumerate(get_list(**par['strength'])):
                                if 0 not in [i4, i5, i6]:
                                    if 1 not in [i4, i5, i6]:
                                        if [2, 2, 2] == [i5, i6, i7]:
                                            if not Y[i]:
                                                Z[0][i0] += 1
                                                Z[1][i1] += 1
                                                Z[2][i2] += 1
                                                Z[3][i3] += 1
                                                Z[4][i4] += 1
                                                Z[5][i5] += 1
                                                Z[6][i6] += 1
                                                Z[7][i7] += 1
                                                #print('<tr><td>{}</td><td>{}</td><td>{}</td><td>{}</td><td>{}</td></tr>'.format(i0, i1, i2, i3, i4))
                                                print('[{},{},{},{},{}],'.format(i0, i1, i2, i3, i4), end='')
                                i += 1
    #print(i0)
#print(Z)
#if 0 not in [i4, i5, i6]:
#[[19308, 17395, 20937, 14971, 18607, 20705, 25406, 30185, 26012, 30213], [7398, 14759, 15597, 17081, 13466, 14756, 25475, 27108, 36302, 51797], [13904, 12324, 9081, 21048, 15915, 21783, 22954, 38147, 34061, 34522], [13797, 20246, 23813, 21779, 20531, 19455, 22536, 23157, 28372, 30053], [0, 35140, 25353, 30085, 34241, 23986, 21614, 18010, 16669, 18641], [0, 83824, 20991, 17609, 17612, 17121, 16906, 16709, 16545, 16422], [0, 94964, 17265, 15930, 15930, 15930, 15930, 15930, 15930, 15930], [14356, 23123, 23241, 23265, 23280, 23287, 23288, 23294, 23301, 23304]]


#if 0 not in [i4, i5, i6]:
#if 1 not in [i4, i5, i6]:
#[[12160, 8960, 9600, 5120, 7040, 8320, 10240, 12160, 11520, 16000], [5760, 10240, 12160, 12800, 9600, 7040, 12160, 8320, 8320, 14720], [9600, 8960, 6400, 11520, 9600, 10880, 8320, 16640, 10880, 8320], [5760, 9600, 11520, 10880, 8960, 7680, 10240, 9600, 11520, 15360], [0, 0, 10240, 14720, 19200, 12160, 11520, 10240, 10240, 12800], [0, 0, 12640, 12640, 12640, 12640, 12640, 12640, 12640, 12640], [0, 0, 12640, 12640, 12640, 12640, 12640, 12640, 12640, 12640], [10112, 10112, 10112, 10112, 10112, 10112, 10112, 10112, 10112, 10112]]

#if 0 not in [i4, i5, i6]:
#if 1 not in [i4, i5, i6]:
#if 2 in [i5, i6, i7]:
#[[3781, 2786, 2985, 1592, 2189, 2587, 3184, 3781, 3582, 4975], [1791, 3184, 3781, 3980, 2985, 2189, 3781, 2587, 2587, 4577], [2985, 2786, 1990, 3582, 2985, 3383, 2587, 5174, 3383, 2587], [1791, 2985, 3582, 3383, 2786, 2388, 3184, 2985, 3582, 4776], [0, 0, 3184, 4577, 5970, 3781, 3582, 3184, 3184, 3980], [0, 0, 12640, 2686, 2686, 2686, 2686, 2686, 2686, 2686], [0, 0, 12640, 2686, 2686, 2686, 2686, 2686, 2686, 2686], [2370, 2370, 10112, 2370, 2370, 2370, 2370, 2370, 2370, 2370]]

#if 0 not in [i4, i5, i6]:
#if 1 not in [i4, i5, i6]:
#if [2, 2, 2] == [i5, i6, i7]:
#[[19, 14, 15, 8, 11, 13, 16, 19, 18, 25], [9, 16, 19, 20, 15, 11, 19, 13, 13, 23], [15, 14, 10, 18, 15, 17, 13, 26, 17, 13], [9, 15, 18, 17, 14, 12, 16, 15, 18, 24], [0, 0, 16, 23, 30, 19, 18, 16, 16, 20], [0, 0, 158, 0, 0, 0, 0, 0, 0, 0], [0, 0, 158, 0, 0, 0, 0, 0, 0, 0], [0, 0, 158, 0, 0, 0, 0, 0, 0, 0]]
