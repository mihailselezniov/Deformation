l = [[0,0,5,5,3],[0,1,4,4,6],[0,1,5,0,5],[0,2,7,6,4],[0,3,3,5,7],[0,4,4,6,4],[0,4,5,2,3],[0,4,5,9,4],[0,5,4,1,3],[0,5,5,8,9],[0,7,1,8,7],[0,7,3,6,5],[0,7,3,8,9],[0,7,6,2,4],[0,8,1,0,9],[0,8,1,5,8],[0,8,2,4,4],[0,9,3,2,9],[0,9,5,2,5],[1,1,0,3,4],[1,1,0,3,6],[1,2,4,6,5],[1,2,7,4,2],[1,3,2,4,6],[1,3,9,3,6],[1,4,0,9,3],[1,4,3,3,4],[1,5,0,8,4],[1,6,0,9,2],[1,6,2,3,4],[1,6,6,2,2],[1,6,7,6,6],[1,6,9,9,5],[2,1,7,1,7],[2,1,7,3,6],[2,2,3,8,6],[2,3,3,6,2],[2,3,5,7,5],[2,3,8,1,4],[2,4,8,0,3],[2,6,0,1,5],[2,7,7,3,8],[2,8,3,1,3],[2,8,4,9,5],[2,8,7,2,4],[2,8,9,1,6],[2,9,7,7,3],[2,9,7,8,2],[3,2,0,6,4],[3,2,3,8,7],[3,4,3,2,3],[3,4,9,9,9],[3,8,5,9,2],[3,9,6,5,4],[3,9,7,8,7],[3,9,8,6,9],[4,0,9,3,5],[4,1,3,9,4],[4,1,7,1,4],[4,2,3,3,9],[4,4,5,7,7],[4,6,7,3,4],[4,6,8,8,5],[4,6,9,2,6],[4,8,9,3,9],[4,9,4,4,7],[4,9,8,0,4],[5,0,6,6,7],[5,1,5,9,4],[5,1,6,8,5],[5,2,7,4,4],[5,2,7,4,6],[5,3,8,7,9],[5,4,6,1,8],[5,5,5,2,2],[5,5,6,2,3],[5,6,5,1,8],[5,9,7,0,5],[5,9,7,1,6],[5,9,8,7,9],[6,0,0,7,3],[6,0,7,5,2],[6,1,4,9,7],[6,2,4,0,4],[6,2,6,5,9],[6,3,0,3,7],[6,3,3,2,6],[6,3,4,0,7],[6,3,7,4,3],[6,4,6,5,4],[6,4,8,6,4],[6,6,1,7,4],[6,6,4,4,4],[6,6,5,2,3],[6,7,4,9,9],[6,9,7,2,2],[7,1,3,2,7],[7,1,7,4,2],[7,2,1,4,4],[7,3,1,8,4],[7,3,8,5,3],[7,4,0,8,2],[7,4,1,8,3],[7,4,9,8,5],[7,5,0,9,5],[7,5,1,5,7],[7,5,5,4,9],[7,6,3,1,8],[7,6,6,6,3],[7,7,8,8,8],[7,7,9,7,8],[7,8,6,2,9],[7,8,8,9,4],[7,9,4,7,6],[7,9,7,6,5],[8,0,0,4,4],[8,0,1,6,9],[8,1,0,6,5],[8,1,2,7,8],[8,2,0,9,5],[8,2,1,7,8],[8,2,6,3,3],[8,3,4,2,3],[8,3,5,1,9],[8,3,5,3,4],[8,5,2,9,8],[8,6,3,3,6],[8,7,1,7,3],[8,7,2,9,8],[8,8,1,3,9],[8,8,7,9,8],[8,9,8,1,3],[8,9,9,2,8],[9,0,0,9,7],[9,0,9,2,2],[9,1,7,6,9],[9,2,2,5,7],[9,2,8,7,6],[9,2,9,3,3],[9,2,9,9,2],[9,3,1,7,8],[9,3,3,5,4],[9,3,7,5,9],[9,3,8,9,3],[9,5,4,8,2],[9,5,7,7,9],[9,6,2,4,3],[9,6,7,9,7],[9,6,8,9,8],[9,7,1,1,6],[9,7,6,8,2],[9,7,8,1,6],[9,9,2,8,5],[9,9,2,9,8],[9,9,3,6,5],[9,9,4,9,3],[9,9,5,0,6],[9,9,8,0,2]]
l0 = l[0]
#area = set()
#i = l[1]
#print(list(map(lambda x: abs(x[0] - x[1]), zip(i, l0))))
#for i in l:
#    print(list(map(lambda x: abs(x[0] - x[1]), zip(i, l0))))

shift = []
r = range(2)
for i0 in r:
    for i1 in r:
        for i2 in r:
            for i3 in r:
                for i4 in r:
                    shift.append([i0, i1, i2, i3, i4])
del shift[0]
#print(len(shift))

def make_set(data):
    return {''.join(map(str, i)) for i in data}

def cut_pressure_time(data):
    return list(map(lambda x: x[:-1], data))

def get_ways(l0):
    ways = []
    for i in shift:
        ways.append(list(map(lambda x: abs(x[0] - x[1]), zip(i, l0))))
        ways.append(list(map(lambda x: sum(x), zip(i, l0))))
    return [i for i in ways if (i[-1] > 1) and (10 not in i) and (11 not in i)]
ways = get_ways(l0)
#print(len(ways))
ways = make_set(cut_pressure_time(get_ways([5,5,5,5,5])))
print('!!!', ways)


#print(len(make_set(ways)))

all_ways = set()
for i in l:
    #all_ways.update(make_set(get_ways(i)))
    all_ways.update(make_set(cut_pressure_time(get_ways(i))))
print(len(all_ways))
#l = make_set(l)
l = make_set(cut_pressure_time(l))
print(len(l))
result = l.intersection(all_ways)
print(len(result))
# 103 from 158 if r = 3 befor cut_pressure_time





